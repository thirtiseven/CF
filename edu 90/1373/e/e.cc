#include <iostream>
#include <algorithm>
#include <string>

int digsum(int x) {
	int res = 0;
	while (x) {
		res += x%10;
		x /= 10;
	}
	return res;
}

int ans1[151] = {-1, 0, -1, 1, -1, 2, -1, 3, -1, 4, 9, 5, 19, 6, 29, 7, 39, 8, 49, 18, 59, 28, 69, 38, 79, 48, 89, 58, 189, 68, 289, 78, 389, 88, 489, 98, 589, 198, 689, 298, 789, 398, 889, 498, 989, 598, 1989, 698, 2989, 798, 3989, 898, 4989, 998, 5989, 1998, 6989, 2998, 7989, 3998, 8989, 4998, 9989, 5998, 19989, 6998, 29989, 7998, 39989, 8998, 49989, 9998, 59989, 19998, 69989, 29998, 79989, 39998, 89989, 49998, 99989, 59998, 199989, 69998, 299989, 79998, 399989, 89998, 499989, 99998, 599989, 199998, 699989, 299998, 799989, 399998, 899989, 499998, 999989, 599998, 1999989, 699998, 2999989, 799998, 3999989, 899998, 4999989, 999998, 5999989, 1999998, 6999989, 2999998, 7999989, 3999998, 8999989, 4999998, 9999989, 5999998, 19999989, 6999998, 29999989, 7999998, 39999989, 8999998, 49999989, 9999998, 59999989, 19999998, 69999989, 29999998, 79999989, 39999998, 89999989, 49999998, 99999989, 59999998, 199999989, 69999998, 299999989, 79999998, 399999989, 89999998, -1, 99999998, -1, 199999998, -1, 299999998, -1, 399999998, -1};

int ans2[151] = {-1, -1, -1, 0, -1, -1, 1, -1, -1, 2, -1, -1, 3, -1, -1, 4, -1, -1, 5, -1, -1, 6, -1, -1, 7, -1, -1, 17, -1, -1, 27, -1, -1, 37, -1, -1, 47, -1, -1, 57, -1, -1, 67, -1, -1, 77, -1, -1, 87, -1, -1, 97, -1, -1, 197, -1, -1, 297, -1, -1, 397, -1, -1, 497, -1, -1, 597, -1, -1, 697, -1, -1, 797, -1, -1, 897, -1, -1, 997, -1, -1, 1997, -1, -1, 2997, -1, -1, 3997, -1, -1, 4997, -1, -1, 5997, -1, -1, 6997, -1, -1, 7997, -1, -1, 8997, -1, -1, 9997, -1, -1, 19997, -1, -1, 29997, -1, -1, 39997, -1, -1, 49997, -1, -1, 59997, -1, -1, 69997, -1, -1, 79997, -1, -1, 89997, -1, -1, 99997, -1, -1, 199997, -1, -1, 299997, -1, -1, 399997, -1, -1, 499997, -1, -1, 599997, -1, -1, 699997};

int T, n, k;
//int upp[39] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 29, 39, 49, 59, 69, 79, 89, 99, 199, 299, 399, 499, 599, 699, 799, 899, 999, 1999, 2999, 3999, 4999, 5999, 6999, 7999, 8999, 9999, 19999, 29999};

int xx[502];

int main(int argc, char *argv[]) {  
	std::ios::sync_with_stdio(false);
	std::cin.tie(0); 
	std::cin >> T;
	while (T--) {
		std::cin >> n >> k;
		if (k == 0) {
			std::string ans = "";
			while (n > 9) {
				ans += "9";
				n -= 9;
			}
			if (n > 0) {
				ans += std::to_string(n);
			}
			std::reverse(ans.begin(), ans.end());
			std::cout << ans << '\n';
		} else if (k == 1) {
			std::cout << ans1[n] << '\n';
		} else if (k == 2) {
			std::cout << ans2[n] << '\n';
		} else {
//			int upper = upp[n/(k+1)+1];
			int upper = 50000;
			std::fill(xx, xx+500, -1);
			for (int i = 0; i <= upper; i++) {
				int temp = 0;
				for (int j = 0; j <= k; j++) {
					temp += digsum(i+j);
				}
				if (xx[temp] == -1) {
					xx[temp] = i;
					if (temp == n) {
						break;
					}
				}
			}
			std::cout << xx[n] << '\n';
		}
	}
}